# Fog Settings
# Parameters ---------------------------------------------------------------------------------------------------------------------------------
#
# distance:     larger distance == less fog
# color:        R G B (0-255) transmission

[FOG]
    sp_a1_intro1 = { distance = 150000, color = [180, 160, 120] }
    sp_a1_intro2 = { distance = 20000, color = [250, 250, 250] }
    sp_a1_intro3 = { distance = 250000, color = [180, 160, 120] }
    sp_a1_wakeup = { distance = 60000, color = [180, 140, 100] }
    sp_a2_intro = { distance = 60000, color = [180, 140, 100] }
    sp_a2_core = { distance = 150000, color = [180, 140, 100] }
    sp_a4_finale2 = { distance = 150000, color = [180, 140, 100] }


# Override culling per game area
# Parameters ---------------------------------------------------------------------------------------------------------------------------------
#
# area:         the area the player has to be in
# leafs:        leaf/s with forced visibility [array]
# areas:        area/s with forced visibility [array]
# cull:         [0] disable frustum culling
#               [1] frustum culling (still forces leaf/s)
#               [2] frustum culling (still forces leaf/s + forces all leafs in current area) (default, even when parameter 'cull' is not used) 
#
# hide_leafs:   force hide leaf/s   [array]
#
# hide_areas:   force hide area/s   [array]
# |>   areas:   area/s to hide      [array]
# |> N_leafs:   only hide area/s when NOT in specified leaf/s [array]

[CULL]
    sp_a1_intro1 = [
        { area = 2, leafs = [436, 950] },
        { area = 3, leafs = [370, 621, 652, 697] },
        { area = 4, leafs = [370, 371, 436, 449, 452, 466, 483, 708, 841, 950] },
        { area = 5, leafs = [621] }
    ]

    sp_a1_intro2 = [
        { area = 1, cull = 0 },
        { area = 4, leafs = [712, 713, 714, 780] },
        { area = 6, leafs = [178, 179, 180, 236], cull = 0 },
        { area = 8, areas = [6], cull = 0 }
    ]

    sp_a1_intro3 = [
        { area = 1, leafs = [13, 384, 387, 402, 1215] },
        { area = 2, leafs = [735, 746, 872, 889, 901, 1055, 1167, 1191, 1215] },
        { area = 3, leafs = [19, 21, 30, 38, 52, 60, 71, 73, 77, 82, 118, 145, 148, 162, 175, 191, 193, 196, 209, 233, 238, 240, 246, 266, 277, 280, 397, 400, 406, 415, 426, 427, 428, 434, 437, 620, 622, 625, 635, 640, 662, 664, 666, 674, 681, 669, 744, 751, 752, 754, 790, 801, 802, 932, 1222, 1215] },
        { area = 4, leafs = [712, 713, 714, 780, 1215] },
        { area = 5, leafs = [861, 862, 1215] },
        { area = 7, leafs = [699, 712, 713, 714, 945, 954, 1080, 1081, 1111, 1215] }
    ]

    sp_a1_intro4 = [
        { area = 2, leafs = [89, 376, 400, 401, 433, 434, 472, 818, 1105] },
        { area = 3, leafs = [51, 234, 761, 792, 797, 856, 937, 970, 979, 1018, 1026, 1077, 1086, 1090, 1101, 1105, 1107, 1108, 1118, 1123] },
        { area = 6, leafs = [234, 761, 792, 797, 856, 937, 970, 979, 1077, 1086, 1090, 1101, 1105, 1107, 1108, 1118, 1123] }
    ]

    sp_a1_intro6 = [
        { area = 3, areas = [2, 4] },
        { area = 4, leafs = [626, 654, 657, 668, 673] },
    ]

    sp_a1_intro7 = [
        { area = 6, leafs = [601, 607, 633, 643, 959, 968, 978] },
        { area = 7, leafs = [632, 633, 640, 643, 646, 884, 915, 965, 984] }
    ]

    sp_a1_wakeup = [
        { area = 1, leafs = [5, 10, 16, 156, 160, 167, 168, 236, 238, 277, 283, 289, 604, 615, 673, 704, 709, 763, 766, 891, 894, 896, 897, 908, 911, 949, 956] }
    ]

    sp_a2_bridge_intro = [
        { area = 2, leafs = [161, 228, 237, 260, 298, 541, 544, 592] }
    ]

    sp_a2_bts1 = [
        { area = 12, leafs = [1357, 1367, 1368, 1485, 1547] }
    ]

    sp_a2_column_blocker = [
        { area = 1, leafs = [432] }
    ]

    sp_a4_laser_platform = [
        { area = 1, cull = 1, leafs = [133] },
        { area = 2, hide_leafs = [89, 99, 100, 158, 171, 178, 901], hide_areas = [
            { areas = [0, 3, 4], N_leafs = [] }
        ]},
    ]

    sp_a4_speed_tb_catch = [
        { area = 5, areas = [1] },
    ]

    sp_a4_finale2 = [
        { area = 1, areas = [4] },
        { area = 4, leafs = [48, 53, 62, 134, 135, 150, 156], areas = [1] },
        
        { area = 9, cull = 2, leafs = [902], hide_areas = [
            { areas = [10], N_leafs = [938, 939, 942, 946] },
            { areas = [11] },
        ]},

        { area = 10, cull = 2, hide_areas = [
            { areas = [7] },
            { areas = [9], N_leafs = [902, 906, 912, 918, 922, 926, 937, 940] },
        ]},

        { area = 12, cull = 2, areas = [15], hide_areas = [
            { areas = [9] },
        ]},

        { area = 14, cull = 2, leafs = [1582, 1602, 1603], hide_areas = [
            { areas = [9, 12], N_leafs = [1598, 1621] },
        ]},

        { area = 15, cull = 2, leafs = [1536, 1651, 1680], areas = [12], hide_areas = [
            { areas = [9, 16] },
        ]},

        { area = 16, areas = [14, 15, 17], leafs = [1536, 1582, 1602, 1603, 1615] },
]


# Spawn unique markers that can be used as anchor meshes - You can spawn duplicates
# Parameters ---------------------------------------------------------------------------------------------------------------------------------
#
# marker:       number of unique marker mesh (the same marker can be spawned multiple times per map)
# position:     X Y Z position of the marker mesh [3D array]

[MARKER]
    sp_a1_intro1 = [
        { marker = 0, position = [-4600, 1380, 1320] }
    ]

    sp_a1_intro2 = [
        { marker = 2, position = [-500, 180, 430] }
    ]

    sp_a1_intro3 = [
        { marker = 5, position = [-380, 840, -250] },
        { marker = 6, position = [18, 2283, -363] },
        { marker = 7, position = [-500, -500, 1150] }
    ]

    sp_a1_wakeup = [
        { marker = 1, position = [7240, 940, 350] }
    ]

    sp_a4_finale4 = [
        { marker = 99, position = [-16, 95, -65] }
    ]


# Remix variable configs
# Parameters ---------------------------------------------------------------------------------------------------------------------------------
#
# startup:      configs that will be loaded on map-load, conf matching the map name will be loaded automatically and does not need to be specified
# conf:         name of config containing remix options (goal values)
#
# leafs:    ]   THIS OR:    leaf's that will trigger the transition [array] (moving from one leaf to another connected & defined leaf will not trigger the transition)
# choreo:   ]   THAT:       name of choreography (.vcd) that will trigger the transition (can be a substring - keep as short as possible) (has prio. over leafs param)
#
# mode:         [0] ONCE: On Enter/Start ---- [1] ONCE: On Leave/End    // transition will only be activated once (until map reload or map_settings reload)
#               [2] ALWAYS: On Enter/Start -- [3] ALWAYS: On Leave/End
#
# ease:         [0] LINEAR 
#               [1] SIN_IN -----[2] SIN_OUT ---- [3] SIN_INOUT
#               [4] CUBIC_IN -- [5] CUBIC_OUT -- [6] CUBIC_INOUT
#               [7] EXPO_IN --- [8] EXPO_OUT --- [9] EXPO_INOUT
#
# duration:     transition time (in seconds)
# delay_in:     delay start of transition (in seconds)
# delay_out:    delay between end of transition and transition back to the initial starting value (in seconds) - only active if value > 0

[CONFIGVARS]
    # Hello Migraine
    #sp_a1_intro1 = { transitions = [
    #    { conf = "chromatic_explosion.conf", choreo = "npc\\sphere03\\OpeningHello", mode = 2, ease = 8, duration = 0.5, delay_in = 0.0, delay_out = 0.15 }
    #]}

    sp_a1_intro2 = { startup = ["chromatic.conf"], transitions = [
        { conf = "chromatic_explosion.conf", leafs = [424], mode = 0, ease = 8, duration = 0.5, delay_in = 0.0, delay_out = 0.1 },
        #{ conf = "chromatic_explosion.conf", choreo = "prehub28.vcd", mode = 0, ease = 8, duration = 2.5, delay_in = 0.0, delay_out = 1.0 }
    ]}

    sp_a4_finale4 = { transitions = [
        { conf = "playermodel_primaryspace_on.conf", choreo = "button_press01.vcd", mode = 0, ease = 0, duration = 0.1, delay_in = 1.0 },
        { conf = "playermodel_primaryspace_off.conf", choreo = "epilogue10.vcd", mode = 0, ease = 0, duration = 0.1, delay_in = 0.0 }
    ]}


# Spawn portals using the remix api - useful for area-connecting portals (between doors / rooms)
# Parameters ---------------------------------------------------------------------------------------------------------------------------------
#
# pair:         number of pair (0 to 1 - only two pairs are currently supported)
# position:     X Y Z coordinates of portal center [3D array]
# rotation:     X Y Z rotation of portal [3D array] 
# scale:        scale of portal [2D array]
# square_mask:  0 = ellipse, 1 = square

[PORTALS]
    sp_a1_wakeup = [
        { pair = 0, portals = [
            { position = [6144, 3456, 1662], rotation = [-90, 0, 0], scale = [127, 127], square_mask = 1 },
            { position = [10375, 1216, 290], rotation = [90, 0, 0], scale = [127, 127], square_mask = 0 }
        ]}
    ]

    # first portal in first pair will be moved to "2108 774 -18" when a certain '.vcd' finishes (because it would be floating in the air otherwise)
    sp_a4_finale2 = [
        { pair = 0, portals = [
            { position = [1780, 110, 1340], rotation = [-90, 180, 0], scale = [260, 130], square_mask = 1 },
            { position = [12347, 11782, 8190], rotation = [90, 0, 0], scale = [260, 130], square_mask = 1 }
        ]},
        { pair = 1, portals = [
            { position = [11665, 11712, 8256], rotation = [0, 0, -90], scale = [128, 128], square_mask = 1 },
            { position = [1406, 704, 192], rotation = [0, 0, 90], scale = [128, 128], square_mask = 1 }
        ]}
    ]